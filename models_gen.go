// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package go_graphql_sample

import (
	"fmt"
	"io"
	"strconv"
)

type NewShip struct {
	Name     string   `json:"name"`
	ShipType ShipType `json:"shipType"`
}

type ShipType string

const (
	ShipTypeBattleShip      ShipType = "BATTLE_SHIP"
	ShipTypeHeavyCruiser    ShipType = "HEAVY_CRUISER"
	ShipTypeLightCruiser    ShipType = "LIGHT_CRUISER"
	ShipTypeDestroyer       ShipType = "DESTROYER"
	ShipTypeAircraftCarrier ShipType = "AIRCRAFT_CARRIER"
)

func (e ShipType) IsValid() bool {
	switch e {
	case ShipTypeBattleShip, ShipTypeHeavyCruiser, ShipTypeLightCruiser, ShipTypeDestroyer, ShipTypeAircraftCarrier:
		return true
	}
	return false
}

func (e ShipType) String() string {
	return string(e)
}

func (e *ShipType) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = ShipType(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid ShipType", str)
	}
	return nil
}

func (e ShipType) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
